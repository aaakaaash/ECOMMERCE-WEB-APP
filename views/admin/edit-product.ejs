<%- include("../../views/partials/admin/header") %>
<head>
    <style>
        .thumbnails-container {
            display: flex;
            overflow-x: auto;
        }

        .thumbnail {
            margin-right: 10px;
        }

        .input-upload {
            position: relative;
        }

        .error-message {
            color: red;
            display: none;
        }

        /* .row {
            display: block;
        } */

        .image-cropper {
            display: none;
            width: 300px;
            height: 200px;
            margin-bottom: 20px;
        }

        .cropper-container {
            position: relative;
        }

        .cropper-container img {
            max-width: 100%;
            max-height: 100%;
        }

        .remove-icon {
            position: absolute;
            margin-left: .5rem;
            cursor: pointer;
        }
    </style>
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/cropperjs/dist/cropper.min.css">
</head>
<section class="content-main">
    <div class="row">
        <div class="col-9">
            <div class="content-header">
                <h2 class="content-title">Edit Product</h2>
            </div>
            <br><br><br>
        </div>
        <div class="col-lg-6">
            <div class="card mb-4">
                <div class="card-body">
                    <form method="post" action="/admin/editProduct/<%= product._id %>" enctype="multipart/form-data" onsubmit="return validateForm()">
                        <div class="mb-4">
                            <label for="product_name" class="form-label">Product Name</label>
                            <br>
                            <input type="text" name="productName" value="<%= product.productName %>" class="form-control border" id="product_name">
                            <div id="productName-error" class="error-message"></div>
                        </div>
                        <div class="mb-4">
                            <label class="form-label">Full Description</label>
                            <br>
                            <textarea name="descriptionData" class="form-control border" rows="4"><%= product.description %></textarea>
                            <div id="description-error" class="error-message"></div>
                        </div>
                        <div class="row">
                            <div class="col-lg-4">
                                <div class="mb-4">
                                    <label class="form-label">Regular Price</label>
                                    <br>
                                    <input placeholder="$" name="regularPrice" type="text" value="<%= product.regularPrice %>" class="form-control border">
                                    <div id="regularPrice-error" class="error-message"></div>
                                </div>
                            </div>
                            <div class="col-lg-4">
                                <div class="mb-4">
                                    <label class="form-label">Sale Price</label>
                                    <br>
                                    <input name="salePrice" type="text" value="<%= product.salePrice %>" class="form-control border">
                                    <div id="salePrice-error" class="error-message"></div>
                                </div>
                            </div>
                            <div class="col-lg-4">
                                <div class="mb-4">
                                    <label class="form-label">Quantity</label>
                                    <br>
                                    <input name="quantity" type="text" value="<%= product.quantity %>" class="form-control border">
                                    <div id="quantity-error" class="error-message"></div>
                                </div>
                            </div>
                        </div>
                        <div class="row">
                            <div class="col-lg-4">
                                <div class="mb-4">
                                    <label class="form-label">Color</label>
                                    <br>
                                    <input name="color" type="text" value="<%= product.color %>" class="form-control border">
                                    <div id="color-error" class="error-message"></div>
                                </div>
                            </div>
                        </div>
                        <div class="card mb-4">
                            <div class="card-body">
                                <div class="row gx-2">
                                    <div class="col-sm-6 mb-3">
                                        <label class="form-label">Category</label>
                                        <br>
                                        <select class="form-select border" style="width: 150px;" name="category">
                                            <% for (let i = 0; i < cat.length; i++) { %>
                                                <option value="<%= cat[i].name %>" <%= product.category === cat[i].name ? 'selected' : '' %> >
                                                    <%= cat[i].name %>
                                                </option>
                                            <% } %>
                                        </select>
                                        <div id="category-error" class="error-message"></div>
                                    </div>
                                </div>
                            </div>
                        </div>
                        <div class="card mb-2">
                            <div class="card-header">
                                <h4>Choose Images</h4>
                            </div>
                            <div class="card-body">
                                <% for (let i = 0; i < product.productImage.length; i++) { %>
                                    <div class="col-md-12">
                                        <div class="mb-4">
                                            <div class="cropper-container">
                                                <img class="rounded" style="width: 50px; height: 60px;" src="/uploads/product-images/<%= product.productImage[i] %>" alt="">
                                                <button type="button" onclick="deleteSingleImage('<%= product.productImage[i] %>', '<%= product._id %>')"><i class="fas fa-times"></i></button>
                                            </div>
                                            
                                        </div>
                                    </div>
                                <% } %>
                                
                                <div class="image-cropper" id="imageCropper1">
                                    <img src="" alt="" id="croppedImg1">
                                    <button type="button" id="saveButton1" class="btn-sm btn-primary">Save</button>
                                </div>
                                <div class="card-body align-items-center" style="margin-bottom: 20px;">
                                    <img src="" alt="" id="imgView1">
                                    <input class="form-control" type="file" name="images1" id="input1" accept="image/png, image/jpeg, image/jpg" onchange="viewImage(event, 1)">
                                    <div id="images-error1" class="error-message"></div>
                                </div>
                                <div class="image-cropper" id="imageCropper2">
                                    <img src="" alt="" id="croppedImg2">
                                    <button type="button" id="saveButton2" class="btn-sm btn-primary">Save</button>
                                </div>
                                <div class="card-body align-items-center" style="margin-bottom: 20px;">
                                    <img src="" alt="" id="imgView2">
                                    <input class="form-control" type="file" name="images2" id="input2" accept="image/png, image/jpeg, image/jpg" onchange="viewImage(event, 2)">
                                    <div id="images-error2" class="error-message"></div>
                                </div>
                                <div class="image-cropper" id="imageCropper3">
                                    <img src="" alt="" id="croppedImg3">
                                    <button type="button" id="saveButton3" class="btn-sm btn-primary">Save</button>
                                </div>
                                <div class="card-body align-items-center" style="margin-bottom: 20px;">
                                    <img src="" alt="" id="imgView3">
                                    <input class="form-control" type="file" name="images3" id="input3" accept="image/png, image/jpeg, image/jpg" onchange="viewImage(event, 3)">
                                    <div id="images-error3" class="error-message"></div>
                                </div>
                            </div>
                        </div>
                        <div>
                            <button class="btn btn-md rounded font-sm hover-up" id="updatebtn" type="button" onclick="validateAndSubmit()">Update</button>
                        </div>
                    </form>
                </div>
            </div>
        </div>
    </div>
</section>
<script src="https://cdn.jsdelivr.net/npm/cropperjs/dist/cropper.min.js"></script>
<%- include("../../views/partials/admin/footer") %>

<script>
function validateAndSubmit() {
    if (validateForm()) {
        document.forms[0].submit();
    }
}

function validateForm() {
    let imageDatas = false;
    clearErrorMessages();
    const name = document.getElementsByName('productName')[0].value;
    const description = document.getElementsByName('descriptionData')[0].value;
    const price = document.getElementsByName('regularPrice')[0].value;
    const saleprice = document.getElementsByName('salePrice')[0].value;
    const color = document.getElementsByName('color')[0].value;
    const category = document.getElementsByName('category')[0].value;
    const quantity = parseInt(document.getElementsByName('quantity')[0].value, 10);
    const images = [
        document.getElementById('input1'),
        document.getElementById('input2'),
        document.getElementById('input3')
    ];
    imageDatas = document.getElementById("imageDatas")?.value;
    let isValid = true;

    if (name.trim() === "") {
        displayErrorMessage('productName-error', 'Please enter a product name.');
        isValid = false;
    }

    if (description.trim() === '') {
        displayErrorMessage('description-error', 'Please enter a product description.');
        isValid = false;
    }

    if (isNaN(quantity) || quantity < 0) {
        displayErrorMessage('quantity-error', 'Please enter a valid non-negative quantity.');
        isValid = false;
    }

    if (!/^\d+(\.\d{1,2})?$/.test(price) || parseFloat(price) < 0) {
        displayErrorMessage('regularPrice-error', 'Please enter a valid non-negative price.');
        isValid = false;
    }

    if (!/^\d+(\.\d{1,2})?$/.test(saleprice) || parseFloat(saleprice) < 0) {
        displayErrorMessage('salePrice-error', 'Please enter a valid non-negative price.');
        isValid = false;
    }

    if (color.trim() === "") {
        displayErrorMessage('color-error', 'Please enter a color.');
        isValid = false;
    }

    // if (!imageDatas && !images.some(input => input.files.length > 0)) {
    //     displayErrorMessage("images-error1", 'Please select at least one image.');
    //     isValid = false;
    // }

    return isValid;
}

function displayErrorMessage(elementId, message) {
    var errorElement = document.getElementById(elementId);
    errorElement.innerText = message;
    errorElement.style.display = "block";
}

function clearErrorMessages() {
    const errorElements = document.getElementsByClassName('error-message');
    Array.from(errorElements).forEach(element => {
        element.innerText = '';
        element.style.display = "none";
    });
}

function viewImage(event, index) {
    let input = event.target;
    let reader = new FileReader();
    reader.onload = function () {
        let dataURL = reader.result;
        let image = document.getElementById('imgView' + index);
        image.src = dataURL;
        let cropper = new Cropper(image, {
            aspectRatio: 1,
            viewMode: 1,
            guides: true,
            background: false,
            autoCropArea: 1,
            zoomable: true
        });
        let cropperContainer = document.querySelector('#imageCropper' + index);
        cropperContainer.style.display = 'block';
        let saveButton = document.querySelector('#saveButton' + index);
        saveButton.addEventListener('click', async function () {
            let croppedCanvas = cropper.getCroppedCanvas();
            let croppedImage = document.getElementById("croppedImg" + index);
            croppedImage.src = croppedCanvas.toDataURL('image/jpeg', 1.0);
            let timestamp = new Date().getTime();
            let fileName = `cropped-img-${timestamp}-${index}.png`;
            await croppedCanvas.toBlob(blob => {
                let input = document.getElementById('input' + index);
                let imgFile = new File([blob], fileName, { type: 'image/png' });
                const fileList = new DataTransfer();
                fileList.items.add(imgFile);
                input.files = fileList.files;
            });
            cropperContainer.style.display = 'none';
        });
    };
    reader.readAsDataURL(input.files[0]);
}

function deleteSingleImage(imageId, productId) {
    $.ajax({
        url: "/admin/deleteImage",
        method: "post",
        data: { imageNameToServer: imageId, productIdToServer: productId },
        success: (response) => {
            if (response.status === true) {
                window.location.reload();
            }
        }
    });
}
</script>
